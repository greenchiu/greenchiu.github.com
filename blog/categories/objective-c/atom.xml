<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | Green]]></title>
  <link href="http://greenchiu.github.com/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://greenchiu.github.com/"/>
  <updated>2013-03-21T13:00:11+08:00</updated>
  <id>http://greenchiu.github.com/</id>
  <author>
    <name><![CDATA[Green Chiu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我在github的第一個Repo-GCTagList]]></title>
    <link href="http://greenchiu.github.com/blog/2013/03/19/my-first-repo-a-gctaglist-at-github/"/>
    <updated>2013-03-19T19:56:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/03/19/my-first-repo-a-gctaglist-at-github</id>
    <content type="html"><![CDATA[<p><blockquote><p><br/><br/>在訂完今年的年度目標後, 除了正在並行的讀書會之外, 另一個就是在github上提交自己的lib; GCTagList 雖然內容很粗糙, 不過也算踏出了第一步, 希望之後會越來越好。 <br/></p></blockquote></p>

<!--more-->


<p>關於TagList, 一開始是因為專案上有這個需求, 希望可以像iPhone的Mail App的收件者或寄件者的tag list樣式; 不過在網路上找的lib大部分都要調整, 在維護上個人覺得不太方便, 加上專案之後要給別人維護, 如果這一塊寫的很醜之後很煩, 所以想了想就抓了一個來參考, 在依照需求來做設計, 整理出來就是GCTagList。</p>

<h2>GCTagList</h2>

<p>模仿iPhone's Mail App中所呈現的tag list樣式</p>

<h3>特點</h3>

<p>taglist有幾個比較特殊的地方, 分別是:</p>

<h4>第一行支援LeftMargin</h4>

<p>主要是解決如果再Taglist前面會需要文字的話, 不會因為需要配合文字就限制住Taglist的寬度。</p>

<h4>最大行數</h4>

<p>當內容很多的時候, 可能因為list內的Taglabel過多造成行數過多(高度過高), 需要讓user一直捲動影響到App的操作。</p>

<h4>自動調整高度</h4>

<p>這就不多解釋了, 就是拿來Resize用 ...</p>

<h4>ARC</h4>

<p>然後就是最近比較常使用的arc, 因為這次的專案支援arc, 所以是以arc為出發點在處理沒有支援arc的專案。</p>

<p>然後GCTagList一些想法是平時觀察UITableView的心得, 自己所做的一些實作, 所以Reuse跟identifire等東西相信有注意到的人應該都不陌生。(命名的方式也有一些雷同)</p>

<h3>使用方式</h3>

<p>在專案需要加入 <code>QuartzCore.frame</code>, 並加入 class &amp; assets的resoure bundle。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>add taglist to your view </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">GCTagList</span><span class="o">*</span> <span class="n">taglist</span> <span class="o">=</span> <span class="p">[[</span><span class="n">GCTagList</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">200</span><span class="p">)];</span>
</span><span class='line'><span class="n">taglist</span><span class="p">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">taglist</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>接著主要實作GCTagListDataSource的2個Mehtod
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>implemention GCTagListDataSource require method </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">numberOfTagLabelInTagList:</span><span class="p">(</span><span class="n">GCTagList</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">tagList</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">GCTagLabel</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nf">tagList:</span><span class="p">(</span><span class="n">GCTagList</span> <span class="o">*</span><span class="p">)</span><span class="nv">tagList</span> <span class="nf">tagLabelAtIndex:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">index</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
最後再呼叫CGTagList的<code>reloadData</code>。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>let your tagist reloadData </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">taglist</span> <span class="n">reloadData</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在與taglist的互動方面, 我也設計了2個方式點擊方式</p>

<ul>
<li>點擊TagLabel</li>
<li>點擊TagLabel's accessoryButton</li>
</ul>


<p>可以在GCTagListDelegate找到對應的使用方式。</p>

<h3>後續的調整</h3>

<ul>
<li>區段性reload、insert和delete (嗯…就是要學)</li>
<li>客製化AccessoryButton</li>
<li>Taglist顏色的調整 … 是否要使用漸層等等</li>
</ul>


<p>目前想到的也就這些吧 … 有想法的可以一起討論一下</p>

<h3>Reference</h3>

<ul>
<li><a href="https://github.com/domness/DWTagList">DWTagList</a></li>
</ul>


<h2>之後</h2>

<p>有個小小的想法, 就是把他放到<a href="http://www.cocoacontrols.com/">cocoacontrols</a>跟<a href="http://cocoapods.org/">cocoapods</a>上 XD, 希望不會寫的太爛被打臉阿~</p>

<p>也要感謝一下馬克(我現在的PM)跟Eikiy(專案合作的創意)以及Jeremy(公司的大Boss), 給了很多的概念跟支援, 才會有這個lib的誕生.</p>

<p>最後附上github repo:<a href="https://github.com/greenchiu/GCTagList">GCTagList</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[建立Resource Bundle]]></title>
    <link href="http://greenchiu.github.com/blog/2013/02/28/xcode-create-resource-bundle/"/>
    <updated>2013-02-28T21:59:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/02/28/xcode-create-resource-bundle</id>
    <content type="html"><![CDATA[<p><img src="/images/bundle_image.png"><br/>
<blockquote><p><br/><br/>本篇介紹如合製作Resoure Bundle <br/></p></blockquote></p>

<!--more-->


<p>開發iOS Application大該有兩年左右的時間了, 在使用外部的資源的時候常常看到*.bundle的檔案, 慢慢的就很好奇該如何製作一個resource bundle(Apple文件上稱為loadable bundles)檔案。上網查詢了一下，找到了一個很簡單的方式，跟大家分享。</p>

<p>首先在你專案的finder建立一個資料夾名稱就設定為appAssets.bundle(參考下圖) <br/>
<img src="/images/bundles/bundle_01.png"></p>

<p>接著確認後會詢問你是否要加入.bundle的附檔名(不要懷疑給他按下去就對了)
<img src="/images/bundles/bundle_02.png"></p>

<p>接著, 很神奇的就是你folder就會變成resource bundle的樣式
<img src="/images/bundles/bundle_03.png"></p>

<p>接著下來, 將你想要放入的檔案(ex:xib,png … etc.)放入resource bundle中, 先對著appAssets.bundle右鍵顯示套件內容 <br/>
<img src="/images/bundles/bundle_04.png"></p>

<p>加入你的檔案 <br/>
<img src="/images/bundles/bundle_05.png"></p>

<p>這樣, 你的loadable bundle就製作完成了; 接著我們把他放入專案來使用, 加入專案後你可以展開appAssets.bundle的內容, 結構應該會跟上圖相同, 這樣就大功告成啦!
<img src="/images/bundles/bundle_06.png"></p>

<p>最後使用bundle內部圖片
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;appAssets.bundle/images/blue_arrow.png&quot;</span><span class="p">];</span> <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最後附上參考網址:<a href="http://www.applausible.com/blog/?p=703">Reference</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS開發Memo(0)]]></title>
    <link href="http://greenchiu.github.com/blog/2013/01/26/ioskai-fa-xiao-xin-de/"/>
    <updated>2013-01-26T15:01:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/01/26/ioskai-fa-xiao-xin-de</id>
    <content type="html"><![CDATA[<p><blockquote><p>在專案改組跟新專案的切換告一段落之後，終於又有時間繼續來更新了，順便把最近在專案上使用的工具稍微記錄一下。</p></blockquote></p>

<!--more-->


<h2>CocoaPods</h2>

<p>最近很紅用來管理Objective-C Project的第三方library工具, 主要是使用Ruby來進行安裝. 安裝使用的方式請參考官網<a href="http://cocoapods.org">Reference</a><br/>
OS X Mountain Lion無法安裝的排除方式: <a href="http://www.zlu.me/blog/2012/02/21/install-native-ruby-gem-in-mountain-lion-preview/">Install Native Ruby Gem in Mountain Lion Preview</a></p>

<h2>AppCooker + AppTasker</h2>

<p><img src="http://www.appcooker.com/wp-content/uploads/2012/09/App-Cooker-Header-Logo.png"></p>

<p>AppCooker是一個一個專門用來設計iOS App的Mockup or wireframe的工具.<br/>
主要的功能可以分成:</p>

<ul>
<li>Icon的紀錄 (不同版本).</li>
<li>App's Mockup or wireframe.</li>
<li>在不同區域上線的文字描述與Keyword.</li>
<li>開發的花費＆收入.</li>
<li>輸出可以點擊的Prototype到其他裝有AppTasker的裝置上.</li>
</ul>


<p>不過AppCooker要價不便宜, 大概1190.NT (39.99鎂 <a href="http://www.appcooker.com">AppCooker.com</a></p>

<h2>Git-flow</h2>

<p>大家可以直接參考Aaron Huang的<a href="http://blog.buginception.com/blog/2012/10/13/recap-git-branching-model/">成功的 Git 分支模式</a></p>

<h2>Resizer</h2>

<p><img src="http://a4.mzstatic.com/us/r1000/078/Purple/v4/4a/70/27/4a702771-ecc7-273a-bfab-383e3c6fc388/Icon.175x175-75.png"> <a href="https://itunes.apple.com/us/app/resizer/id411277085?mt=12">itunes</a><br/>
將 Retina 使用的圖檔快速且完美地產生普通螢幕的圖檔尺寸(ex: iPad2 or iPhone3Gs)。</p>
]]></content>
  </entry>
  
</feed>
