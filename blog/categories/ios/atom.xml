<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Green]]></title>
  <link href="http://greenchiu.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://greenchiu.github.com/"/>
  <updated>2013-06-16T12:31:58+08:00</updated>
  <id>http://greenchiu.github.com/</id>
  <author>
    <name><![CDATA[Green Chiu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[行事曆小記事]]></title>
    <link href="http://greenchiu.github.com/blog/2013/06/15/xing-shi-li-xiao-ji-shi/"/>
    <updated>2013-06-15T11:38:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/06/15/xing-shi-li-xiao-ji-shi</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/130615/130615_01.png">
<blockquote><p><br/><br/>行事曆功能是在iOS5就提出的, 在iOS6部分會有一些不同, 不過大致內容都是差不多的; iOS7的部份因為我電腦Xcode5-DP只要打code就會crash, 所以等之後再來做一些補充囉.</p></blockquote></p>

<p>行事曆功能主要是使用<code>EventKit.framework</code>; 在EventKit中, 除了<code>行事曆(Canlendar)</code>外, 同時也包含<code>提醒事項(Reminders)</code>的功能, 在修改/新增會需要使用到<code>EKEventStore</code>來做操作.</p>

<!--more-->


<p>在這篇文章裡主要會介紹到Calendar的部份, Reminder的操作就要請大家自己嘗試了.</p>

<h3>開始之前</h3>

<p>我們主要會用到幾個Class, 分別是:</p>

<ul>
<li>EKEventStore</li>
<li>EKCalendar</li>
<li>EKEvent</li>
<li>EKAlarm</li>
</ul>


<p>EKEventStore主要是讓我們管理EKCalendar以及EKEvent, <code>EKAlarm</code>是可以在EKEvent中加入提示的鬧鐘.</p>

<h2>EKEventStore</h2>

<p>eventStore在行事曆以及提醒事項的功用是最重要的, 主要是負責建立/刪除/修改行事曆(提醒事項)及事件(EKEvent); 同時也是用來搜尋Event的主要Class.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>建立EKEventStore Instance </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="o">=</span> <span class="p">[[</span><span class="n">EKEventStore</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如果你是在iOS6, 你至少需要執行一次取得權限的動作</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>iOS6, 取得User的許可 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//EKEventStore request permission method</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">requestAccessToEntityType:</span><span class="p">(</span><span class="n">EKEntityType</span><span class="p">)</span><span class="nv">entityType</span> <span class="nf">completion:</span><span class="p">(</span><span class="n">EKEventStoreRequestAccessCompletionHandler</span><span class="p">)</span><span class="nv">completion</span><span class="p">;</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="o">=</span> <span class="p">[[</span><span class="n">EKEventStore</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// after EKEventStore init., get user permission.</span>
</span><span class='line'><span class="n">EKEventStoreRequestAccessCompletionHandler</span> <span class="n">handler</span> <span class="o">=</span> <span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">granted</span><span class="p">,</span> <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">){</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="n">granted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 允許使用 …</span>
</span><span class='line'>    <span class="c1">// your statement …</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 不允許 …</span>
</span><span class='line'>    <span class="c1">// other statement … </span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">};</span>
</span><span class='line'><span class="c1">// 這邊使用EKEntityTypeEvent, 是要存取user iDevice的行事曆; 如果要使用提醒事項就改用EKEntityTypeReminder</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="nl">requestAccessToEntityType:</span><span class="n">EKEntityTypeEvent</span> <span class="nl">completion:</span><span class="n">handler</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>除此之外, 你也可以用EKEventStore的Class Mehtod <code>authorizationStatusForEntityType:</code>來判斷是否要取得允許或其他對應的動作</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>iOS6, 判斷目前的Auth狀態 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">EKAuthorizationStatus</span> <span class="n">authState</span> <span class="o">=</span> <span class="p">[</span><span class="n">EKEventStore</span> <span class="nl">authorizationStatusForEntityType:</span><span class="n">EKEntityTypeEvent</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="n">authState</span> <span class="o">==</span> <span class="n">EKAuthorizationStatusAuthorized</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;EKAuthorizationStatusAuthorized&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">authState</span> <span class="o">==</span> <span class="n">EKAuthorizationStatusDenied</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;EKAuthorizationStatusDenied&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">authState</span> <span class="o">==</span> <span class="n">EKAuthorizationStatusRestricted</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;EKAuthorizationStatusRestricted&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;EKAuthorizationStatusNotDetermined&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>到這邊, 我們已經完成了EKEventStore的設置, 接著就可以直接建立/修改Event or Calendar
<p class='info warning' data-title='注意'>EKEvent &amp; EKCalendar的實體, 都需要使用EKEventStore來建立實體, 而不是使用method init</p></p>

<h3>加入Event到Calendar</h3>

<p>接著, 我們建立一個Event到Calendar
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>建立EKEvent實體, 並加入default Calendar </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">EKEvent</span><span class="o">*</span> <span class="n">myEvent</span> <span class="o">=</span> <span class="p">[</span><span class="n">EKEvent</span> <span class="nl">eventWithEventStore:</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span><span class="p">];</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">calendar</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">eventStore</span><span class="p">.</span><span class="n">defaultCalendarForNewEvents</span><span class="p">;</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">@&quot;該更新部落格了&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">location</span> <span class="o">=</span> <span class="s">@&quot;Green&#39;s Home.&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">notes</span> <span class="o">=</span> <span class="s">@&quot;這次要寫的內容是關於iOS行事曆的部份, 主要建立一個新的Event還有Calendar&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">startTime</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">];</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">endTime</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="nl">dateWithTimeIntervalSince1970:</span> <span class="p">[</span><span class="n">myEvent</span><span class="p">.</span><span class="n">startTime</span> <span class="n">timeIntervalSince1970</span><span class="p">]</span> <span class="o">+</span><span class="mi">3600</span><span class="p">];</span>
</span><span class='line'><span class="n">myEvent</span><span class="p">.</span><span class="n">timeZone</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimeZone</span> <span class="nl">timeZoneWithName:</span><span class="s">@&quot;Asia/Taipei&quot;</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">NSError</span><span class="o">*</span> <span class="n">error</span><span class="p">;</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">action</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="nl">saveEvent:</span><span class="n">myEvent</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                               <span class="nl">commit:</span><span class="n">YES</span>
</span><span class='line'>                                 <span class="nl">span:</span><span class="n">EKSpanThisEvent</span>
</span><span class='line'>                                <span class="nl">error:</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">error</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="n">action</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;save event success:eId:%@&quot;</span><span class="p">,</span> <span class="n">myEvent</span><span class="p">.</span><span class="n">eventIdentifier</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;save event failure, error:%@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在上面, 我們使用<code>[EKEvent eventWithEventStore:self.eventStore]</code>來建立一個event, 並且將這個event設定了一些基礎內容(title/ location/ notes …etc.), 並且讓這個事件出現在iDevice的預設行事曆中, 儲存成功的話, 就會在行事曆中出現一個event; 如果你希望之後還可以繼續在你的App內維護這個Event, 你需要把<code>eventIdentifier</code>特別記錄下來,搭配下面的方式取得Event, 這樣之後才有辦法去維護這個Event.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>取得上次建立的Event </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">EKEvent</span><span class="o">*</span> <span class="n">event</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="nl">eventWithIdentifier:</span><span class="n">YOUR_EVENT_IDENTIFIER</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>為Event加上Alarm</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>建立EKAlarm並加入Event中 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">EKEvent</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">myEvent</span> <span class="o">=</span> <span class="p">[</span><span class="n">EKEvent</span> <span class="nl">eventWithEventStore:</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span><span class="p">];</span>
</span><span class='line'><span class="o">/**</span>
</span><span class='line'> <span class="o">*</span>  <span class="p">...</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">NSInteger</span> <span class="n">sendTime</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">]</span> <span class="n">timeIntervalSince1970</span><span class="p">];</span>
</span><span class='line'><span class="c1">//一小時前</span>
</span><span class='line'><span class="n">NSDate</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">alarmDate0</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="nl">dateWithTimeIntervalSince1970:</span><span class="n">sendTime</span> <span class="o">-</span> <span class="p">(</span><span class="mi">60</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="mi">60</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)];</span>
</span><span class='line'><span class="n">EKAlarm</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">alarm0</span> <span class="o">=</span> <span class="p">[</span><span class="n">EKAlarm</span> <span class="nl">alarmWithAbsoluteDate:</span><span class="n">alarmDate</span><span class="p">];</span>
</span><span class='line'><span class="c1">//一天前</span>
</span><span class='line'><span class="n">NSDate</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">alarmDate1</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="nl">dateWithTimeIntervalSince1970:</span><span class="n">sendTime</span> <span class="o">-</span> <span class="p">(</span><span class="mi">60</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="mi">60</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="mi">24</span><span class="p">)];</span>
</span><span class='line'><span class="n">EKAlarm</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">alarm1</span> <span class="o">=</span> <span class="p">[</span><span class="n">EKAlarm</span> <span class="nl">alarmWithAbsoluteDate:</span><span class="n">alarmDate2</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">myEvent</span><span class="p">.</span><span class="n">alarms</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="n">alarm0</span><span class="p">,</span> <span class="n">alarm1</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">NSError</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">error</span><span class="p">;</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">action</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="nl">saveEvent:</span><span class="n">myEvent</span>
</span><span class='line'><span class="o">/**</span>
</span><span class='line'> <span class="o">*</span> <span class="p">...</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
到這邊, 就是一個有提示功能的行事曆事件的建立方式, 中間一些參數沒有介紹到(ex:參與者), 大家可以自己去試試看.</p>

<h2>為Application建立一個新的Calendar</h2>

<p>接著, 我想把這個事件加入一個自定義的的Calendar, 接著下來我們先建立一個新的Calendar; 在建立Calendar的部份會使用到一個新的class <code>EKSource</code>, 來自EKEventStore's property sources.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>建立一個Calendar </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//step1</span>
</span><span class='line'><span class="c1">//這邊取得的方式只有在iOS5才能使用, iOS6會另外說明</span>
</span><span class='line'><span class="n">EKSource</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">theSource</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="n">NSArray</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">tempSources</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">eventStore</span><span class="p">.</span><span class="n">sources</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">EKSource</span> <span class="o">*</span><span class="n">source</span> <span class="k">in</span> <span class="n">tempSources</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">source</span><span class="p">.</span><span class="n">sourceType</span> <span class="o">==</span> <span class="n">EKSourceTypeLocal</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">theSource</span> <span class="o">=</span> <span class="n">source</span><span class="p">;</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//step2</span>
</span><span class='line'><span class="n">EKCalendar</span> <span class="o">*</span><span class="n">calendar</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">theSource</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">calendar</span> <span class="o">=</span> <span class="p">[</span><span class="n">EKCalendar</span> <span class="nl">calendarWithEventStore:</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span><span class="p">];</span>
</span><span class='line'><span class="n">calendar</span><span class="p">.</span><span class="n">CGColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">orangeColor</span><span class="p">].</span><span class="n">CGColor</span><span class="p">;</span>
</span><span class='line'><span class="n">calendar</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">@&quot;愛合購行事曆&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">calendar</span><span class="p">.</span><span class="n">source</span> <span class="o">=</span> <span class="n">theSource</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error: Local source not available&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//step3</span>
</span><span class='line'><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="nl">saveCalendar:</span><span class="n">calendar</span> <span class="nl">commit:</span><span class="n">YES</span> <span class="nl">error:</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">error</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// save your calendar.calendarIdentifier</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error saving calendar: %@.&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Step1</h3>

<p>在Step1的步驟, eventStore.sources, 其實可以把它當成calendar groups(例如iCloud's or gmail accounts, gmail在不同的帳號可以建立自己的行事曆), 然後我們取出type=EKSourceTypeLocal來做為我們要使用的source(ps. iOS6比較特別, 後面會有額外的程式修改).</p>

<h3>Step2</h3>

<p>接著我們使用EKCalendar's Class Method <code>calendarWithEventStore:</code>來建立calendar instance, 接著設定calendar的顏色、標題還有我們在Step1取得的source.</p>

<h3>Step3</h3>

<p>最後儲存calendar到iDevice的Database中; 如果成功的話, 記得把calendar.calendarIdentifier記錄下來, 下次只要使用下面的方式就可以直接取得這個calendar.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>取得上次建立的Calendar </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">EKCalendar</span><span class="o">*</span> <span class="n">eventCalendar</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">eventStore</span> <span class="nl">calendarWithIdentifier:</span><span class="n">YOUR_CALENDAR_IDENTIFIER</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>之後再行事曆的列表中, 你就可以看到你剛剛建立的Calendar(ex:我剛剛建立的是愛合購行事曆)
<img src="/images/blog/130615/130615_02.png"></p>

<h3>iOS6中的差異</h3>

<p>接著在iOS6中, 該如何取得可以使用的source, 只要將剛剛Step1中的判斷sourceType(line 6)做一些調整, 如下:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>@ iOS6, 取得source的調整 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">source</span><span class="p">.</span><span class="n">sourceType</span> <span class="o">==</span> <span class="n">EKSourceTypeCalDAV</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="p">[</span><span class="n">source</span><span class="p">.</span><span class="n">title</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;iCloud&quot;</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如果繼續使用EKSourceTypeLocal並不會出現錯誤, 但是就不會出現在列表之中; 另外如果不指定source.title=iCloud的話, 可能會因為沒有權限修改該group(ex:gmail account)而失敗.</p>

<h2>題外話</h2>

<p>最近總想著改變一些記錄的方式, 不過有一點不得其門而入, 像是該如何把東西些的足夠深入, 內容方面也是比較精簡; 在一些敘述的方法跟內容的考慮上就變得很難拿捏, 該如何調整可能只能慢慢去做嘗試跟改變了, 也很希望有在看的人可以給我一些建議跟方向, 一起討論程式方面也沒有問題, 謝謝.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITextView和UITextField的使用小技巧]]></title>
    <link href="http://greenchiu.github.com/blog/2013/03/31/uitextviewhe-uitextfieldde-shi-yong-xiao-ji-qiao/"/>
    <updated>2013-03-31T14:20:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/03/31/uitextviewhe-uitextfieldde-shi-yong-xiao-ji-qiao</id>
    <content type="html"><![CDATA[<p><blockquote><p><br/><br/>其實應該是要說UIResponder才對, 不過範圍好像大了點, 為了偷懶, 就只記錄最近開發過程一些使用的技巧。</p></blockquote></p>

<!--more-->


<p><img src="/images/blog/0331/417206.jpg"><br/>
(via <a href="http://blog.fashionguide.com.tw/602/posts/38191-iDM">http://blog.fashionguide.com.tw/602/posts/38191-iDM</a>)</p>

<p>以上面的圖片內容作為參考, 在做這個畫面互動的時候, 我想我會用數個按鈕(UIButton)點下去後, 在將UIPickerView顯示出來, 最後再點擊完成將Picker的內容記錄下來並更新UIButton的title,這樣的作法以這個App來說應該已經足夠了。</p>

<p>But, 就是這個萬惡的But…</p>

<p>現在是一個比較複雜的輸入表單, 這個Layout有幾個內容會需要被填寫, Name、birthday和地址…等等, 這樣該怎麼辦?</p>

<ul>
<li>由一堆的UITextField(UITextView,文字內容較多使用)外加一堆Button來做的話</li>
<li>全部由UITextField &amp; UITextView 來做</li>
</ul>


<p>以上兩個方式都是可以去實現並且可行的, 關於第一點就不多說, 來說說第二點吧~</p>

<h2>UIResponder</h2>

<p>從Apple Developer Docs上的解釋是說這是處理事件(Events)的基本Class; UIView …etc.都是繼承自UIResponder, 不過今天不是專門提它的; 這邊先提一下在UIViewController要叫出UIPickerView要怎麼實作.</p>

<p><code>objc  UIResponder's method.   
- (BOOL)canBecomeFirstResponder;
- (UIView*)inputView;
- (UIView*)inputAccessoryView;
</code>
在iPhone開發中, 如果要在UIViewController呼叫出UIPickerView, 會需要override <code>canBecomeFirstResponder</code> 跟 <code>inputView</code></p>

<p>``` objc @ViewController Require to override
// UIViewController default is NO.
- (BOOL)canBecomeFirstResponder {</p>

<pre><code>return YES; 
</code></pre>

<p>}</p>

<ul>
<li>(UIView*) inputView {
  return [[UIPickerView alloc] init];
}
```</li>
</ul>


<p>讓Controller本身可以成為<code>FirstResponder</code>, 及成為FirstResponder時會呈現的<code>inputView</code>;</p>

<p>如果有需要一個ControlBar去控制inputView的話, 就覆寫<code>inputAccessoryView</code>
``` objc add a toolbar for inputView
- (UIView*) inputAccessoryView {</p>

<pre><code>return [[UIToolbar alloc] init];
</code></pre>

<p>}
```</p>

<h2>UITextField &amp; UITextView</h2>

<p>一般來說,當你Tapped UITextField(UITextView)時, 會顯示一個Keyboard; 這邊的Keyboard就是UITextField預設的inputView<code>(前面有提到UIView是繼承UIResponder)</code>。</p>

<p>在UITextField&amp;UITextView可以直接去Assign inputView &amp; inputAccessoryView, 如果要直接使用Keyboard就不用設定inputView。</p>

<p><code>objc UITextView &amp; UITextField
UITextField* textField = [[UITextField alloc] initWithFrame:CGRectMake(0, 0, 200, 44)];
textField.inputView = {your inputView};
textField.inputAccessoryView = {your inputAccessoryView};
</code></p>

<p>特別一提的是, 如果你預設使用Keyboard(沒有設定inputView),並且設定inputAccessoryView的時候;觀察UIKeyboardWillShowNotication…etc.的通知, 系統會自動把inputAccessoryView的高度自動加上去...(一開始沒注意到害我自己debug半天找不到錯在哪)</p>

<p>用這樣的方式, 就可以輕鬆的去處理需要多個輸入但是要不同的inputView的狀況。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我在github的第一個Repo-GCTagList]]></title>
    <link href="http://greenchiu.github.com/blog/2013/03/19/my-first-repo-a-gctaglist-at-github/"/>
    <updated>2013-03-19T19:56:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/03/19/my-first-repo-a-gctaglist-at-github</id>
    <content type="html"><![CDATA[<p><p class='info info' data-title='News'>已經可以在CocoaPods &amp; CocoaControls找到GCTagList<br/>使用上有任何建議或問題可以直接在github上給我建議, 謝謝</p>
<blockquote><p><br/><br/>在訂完今年的年度目標後, 除了正在並行的讀書會之外, 另一個就是在github上提交自己的lib; GCTagList 雖然內容很粗糙, 不過也算踏出了第一步, 希望之後會越來越好。 <br/></p></blockquote></p>

<!--more-->


<p>關於TagList, 一開始是因為專案上有這個需求, 希望可以像iPhone的Mail App的收件者或寄件者的tag list樣式; 不過在網路上找的lib大部分都要調整, 在維護上個人覺得不太方便, 加上專案之後要給別人維護, 如果這一塊寫的很醜之後很煩, 所以想了想就抓了一個來參考, 在依照需求來做設計, 整理出來就是GCTagList。</p>

<h2>GCTagList</h2>

<p>模仿iPhone's Mail App中所呈現的tag list樣式</p>

<h3>特點</h3>

<p>taglist有幾個比較特殊的地方, 分別是:</p>

<h4>第一行支援LeftMargin</h4>

<p>主要是解決如果再Taglist前面會需要文字的話, 不會因為需要配合文字就限制住Taglist的寬度。</p>

<h4>最大行數</h4>

<p>當內容很多的時候, 可能因為list內的Taglabel過多造成行數過多(高度過高), 需要讓user一直捲動影響到App的操作。</p>

<h4>自動調整高度</h4>

<p>這就不多解釋了, 就是拿來Resize用 ...</p>

<h4>ARC</h4>

<p>然後就是最近比較常使用的arc, 因為這次的專案支援arc, 所以是以arc為出發點在處理沒有支援arc的專案。</p>

<p>然後GCTagList一些想法是平時觀察UITableView的心得, 自己所做的一些實作, 所以Reuse跟identifire等東西相信有注意到的人應該都不陌生。(命名的方式也有一些雷同)</p>

<h3>使用方式</h3>

<p>在專案需要加入 <code>QuartzCore.frame</code>, 並加入 class &amp; assets的resoure bundle。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>add taglist to your view </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">GCTagList</span><span class="o">*</span> <span class="n">taglist</span> <span class="o">=</span> <span class="p">[[</span><span class="n">GCTagList</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">200</span><span class="p">)];</span>
</span><span class='line'><span class="n">taglist</span><span class="p">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">taglist</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>接著主要實作GCTagListDataSource的2個Mehtod
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>implemention GCTagListDataSource require method </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">numberOfTagLabelInTagList:</span><span class="p">(</span><span class="n">GCTagList</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">tagList</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">GCTagLabel</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nf">tagList:</span><span class="p">(</span><span class="n">GCTagList</span> <span class="o">*</span><span class="p">)</span><span class="nv">tagList</span> <span class="nf">tagLabelAtIndex:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">index</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
最後再呼叫CGTagList的<code>reloadData</code>。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>let your tagist reloadData </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">taglist</span> <span class="n">reloadData</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在與taglist的互動方面, 我也設計了2個方式點擊方式</p>

<ul>
<li>點擊TagLabel</li>
<li>點擊TagLabel's accessoryButton</li>
</ul>


<p>可以在GCTagListDelegate找到對應的使用方式。</p>

<h3>後續的調整</h3>

<ul>
<li>區段性reload、insert和delete (嗯…就是要學)</li>
<li>客製化AccessoryButton</li>
<li>Taglist顏色的調整 … 是否要使用漸層等等</li>
</ul>


<p>目前想到的也就這些吧 … 有想法的可以一起討論一下</p>

<h3>Reference</h3>

<ul>
<li><a href="https://github.com/domness/DWTagList">DWTagList</a></li>
</ul>


<h2>之後</h2>

<p>有個小小的想法, 就是把他放到<a href="http://www.cocoacontrols.com/">cocoacontrols</a>跟<a href="http://cocoapods.org/">cocoapods</a>上 XD, 希望不會寫的太爛被打臉阿~</p>

<p>也要感謝一下馬克(我現在的PM)跟Eikiy(專案合作的創意)以及Jeremy(公司的大Boss), 給了很多的概念跟支援, 才會有這個lib的誕生.</p>

<p>最後附上github repo:<a href="https://github.com/greenchiu/GCTagList">GCTagList</a></p>

<h2>最近</h2>

<p>嗯, 小弟我把它丟上cocoacontrols了, 丟上去的方式還挺簡單的, 有兩種方式</p>

<ul>
<li>github account, 從github上抓取</li>
<li>其他方式</li>
</ul>


<p>我是使用github的方式, 將你的lib URL丟給它後它會抓一些基本的資訊, 然後會需要填一些內容&amp;keyword (for cocoacontrols search); 提交之後要等待審核(?, 會需要一段時間, 我大該排了一個禮拜吧, 如果沒問題它就會直接出現在cocoacontrol裡面啦~</p>

<p>今天下午也嘗試了提交到cocoapods, 不過不知道自己做的正不正確 … (Orz, 英文太破) … 如果有提交成功, 再來補充囉。</p>

<p>--</p>

<p>最後額外感謝<a href="https://twitter.com/aar0nTw">Aaron Haung</a>, 今天下午跟他詢問Roibbon p的效果該怎麼做, 沒想到他跟我說給我一小時, 我寫個外掛給你~真是揪甘心, 請受小弟一拜~</p>

<p>也附上<a href="https://github.com/aar0nTw/Ribbonp">網址</a>大家有需要可以去抓囉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[建立Resource Bundle]]></title>
    <link href="http://greenchiu.github.com/blog/2013/02/28/xcode-create-resource-bundle/"/>
    <updated>2013-02-28T21:59:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/02/28/xcode-create-resource-bundle</id>
    <content type="html"><![CDATA[<p><img src="/images/bundle_image.png"><br/>
<blockquote><p><br/><br/>本篇介紹如合製作Resoure Bundle <br/></p></blockquote></p>

<!--more-->


<p>開發iOS Application大該有兩年左右的時間了, 在使用外部的資源的時候常常看到*.bundle的檔案, 慢慢的就很好奇該如何製作一個resource bundle(Apple文件上稱為loadable bundles)檔案。上網查詢了一下，找到了一個很簡單的方式，跟大家分享。</p>

<p>首先在你專案的finder建立一個資料夾名稱就設定為appAssets.bundle(參考下圖) <br/>
<img src="/images/bundles/bundle_01.png"></p>

<p>接著確認後會詢問你是否要加入.bundle的附檔名(不要懷疑給他按下去就對了)
<img src="/images/bundles/bundle_02.png"></p>

<p>接著, 很神奇的就是你folder就會變成resource bundle的樣式
<img src="/images/bundles/bundle_03.png"></p>

<p>接著下來, 將你想要放入的檔案(ex:xib,png … etc.)放入resource bundle中, 先對著appAssets.bundle右鍵顯示套件內容 <br/>
<img src="/images/bundles/bundle_04.png"></p>

<p>加入你的檔案 <br/>
<img src="/images/bundles/bundle_05.png"></p>

<p>這樣, 你的loadable bundle就製作完成了; 接著我們把他放入專案來使用, 加入專案後你可以展開appAssets.bundle的內容, 結構應該會跟上圖相同, 這樣就大功告成啦!
<img src="/images/bundles/bundle_06.png"></p>

<p>最後使用bundle內部圖片
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;appAssets.bundle/images/blue_arrow.png&quot;</span><span class="p">];</span> <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最後附上參考網址:<a href="http://www.applausible.com/blog/?p=703">Reference</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS開發Memo(0)]]></title>
    <link href="http://greenchiu.github.com/blog/2013/01/26/ioskai-fa-xiao-xin-de/"/>
    <updated>2013-01-26T15:01:00+08:00</updated>
    <id>http://greenchiu.github.com/blog/2013/01/26/ioskai-fa-xiao-xin-de</id>
    <content type="html"><![CDATA[<p><blockquote><p>在專案改組跟新專案的切換告一段落之後，終於又有時間繼續來更新了，順便把最近在專案上使用的工具稍微記錄一下。</p></blockquote></p>

<!--more-->


<h2>CocoaPods</h2>

<p>最近很紅用來管理Objective-C Project的第三方library工具, 主要是使用Ruby來進行安裝. 安裝使用的方式請參考官網<a href="http://cocoapods.org">Reference</a><br/>
OS X Mountain Lion無法安裝的排除方式: <a href="http://www.zlu.me/blog/2012/02/21/install-native-ruby-gem-in-mountain-lion-preview/">Install Native Ruby Gem in Mountain Lion Preview</a></p>

<h2>AppCooker + AppTasker</h2>

<p><img src="http://www.appcooker.com/wp-content/uploads/2012/09/App-Cooker-Header-Logo.png"></p>

<p>AppCooker是一個一個專門用來設計iOS App的Mockup or wireframe的工具.<br/>
主要的功能可以分成:</p>

<ul>
<li>Icon的紀錄 (不同版本).</li>
<li>App's Mockup or wireframe.</li>
<li>在不同區域上線的文字描述與Keyword.</li>
<li>開發的花費＆收入.</li>
<li>輸出可以點擊的Prototype到其他裝有AppTasker的裝置上.</li>
</ul>


<p>不過AppCooker要價不便宜, 大概1190.NT (39.99鎂 <a href="http://www.appcooker.com">AppCooker.com</a></p>

<h2>Git-flow</h2>

<p>大家可以直接參考Aaron Huang的<a href="http://blog.buginception.com/blog/2012/10/13/recap-git-branching-model/">成功的 Git 分支模式</a></p>

<h2>Resizer</h2>

<p><img src="http://a4.mzstatic.com/us/r1000/078/Purple/v4/4a/70/27/4a702771-ecc7-273a-bfab-383e3c6fc388/Icon.175x175-75.png"> <a href="https://itunes.apple.com/us/app/resizer/id411277085?mt=12">itunes</a><br/>
將 Retina 使用的圖檔快速且完美地產生普通螢幕的圖檔尺寸(ex: iPad2 or iPhone3Gs)。</p>
]]></content>
  </entry>
  
</feed>
